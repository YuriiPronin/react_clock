{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timer","this","window","setInterval","setState","prevClockName","clockName","prevDate","props","console","debug","info","toLocaleTimeString","className","Component","getRandomName","value","now","toString","slice","App","isClock","timerId","document","addEventListener","event","preventDefault","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,MAAQ,EALV,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,cAGG,IAFYM,EAEb,EAFEC,UACMC,EACR,EADET,KAEMQ,EAAcL,KAAKO,MAAnBF,UACAR,EAASG,KAAKJ,MAAdC,KAEJO,IAAkBC,GAEpBG,QAAQC,MAAR,uBAA8BL,EAA9B,eAAkDC,IAGhDC,IAAaT,GAEfW,QAAQE,KAAKb,EAAKc,wBA3BxB,oBA+BE,WACE,IAAQN,EAAcL,KAAKO,MAAnBF,UACAR,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGP,IAGF,YAED,sBAAMO,UAAU,cAAhB,SACGf,EAAKc,8BA5ChB,GAA2BE,aCN3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAUX,IAAMI,EAAb,4MACEvB,MAAQ,CACNS,UAAW,UACXe,SAAS,GAHb,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,SAAS,OAG3BE,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,SAAS,OAG3BpB,KAAKqB,QAAUpB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEE,UAAWS,QAC1B,QArBP,kCAwBE,WAAwB,IAAD,OACrBQ,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,SAAS,OAG3BE,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,SAAS,OAG3BpB,KAAKqB,QAAU,IAnCnB,oBAsCE,WACE,IAAQhB,EAAcL,KAAKJ,MAAnBS,UACAe,EAAYpB,KAAKJ,MAAjBwB,QAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GACC,cAAC,EAAD,CAAOf,UAAWA,WA9C5B,GAAyBQ,aCdzBc,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.5eb875d5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    { clockName: prevClockName }: Readonly<Props>,\n    { date: prevDate }: Readonly<State>,\n  ) {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    if (prevClockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n\n    if (prevDate !== date) {\n      // eslint-disable-next-line no-console\n      console.info(date.toLocaleTimeString());\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport type Props = {};\n\nexport type State = {\n  clockName: string,\n  isClock: boolean,\n};\n\nexport class App extends Component<Props, State> {\n  state = {\n    clockName: 'Clock-0',\n    isClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ isClock: false });\n    });\n\n    document.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.setState({ isClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ isClock: false });\n    });\n\n    document.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.setState({ isClock: true });\n    });\n\n    this.timerId = 0;\n  }\n\n  render() {\n    const { clockName } = this.state;\n    const { isClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}